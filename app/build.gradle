plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.javalin:javalin:6.1.3'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation 'com.h2database:h2:2.2.224'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'gg.jte:jte:3.1.12'
    implementation 'io.javalin:javalin-bundle:6.1.3'
    implementation 'io.javalin:javalin-rendering:6.1.3'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'com.konghq:unirest-java:3.11.11'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.2'
    checkstyle 'com.puppycrawl.tools:checkstyle:8.45.1'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

application {
    mainClass = 'hexlet.code.App'
}

checkstyle {
    toolVersion = '8.45.1'
    configFile = file('config/checkstyle/checkstyle.xml')
    configProperties['checkstyle.enableExternalDtdLoad'] = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}

shadowJar {
    archiveBaseName.set('app')
    archiveVersion.set('1.0-SNAPSHOT')
    archiveClassifier.set('')
    mergeServiceFiles()
}

tasks.named('distZip') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('distTar') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('startScripts') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('startShadowScripts') {
    dependsOn tasks.named('shadowJar')
}

tasks.named('jar') {
    enabled = false
}

